/*
 * Basemap styles service
 *
 * The basemap styles service provides global basemap layers in a variety of styles to use in mapping applications. Basemap layers give geographic context to a map or scene by serving static tiles containing geographic reference data. This data includes, but is not limited to, topographic features, road networks, footpaths, building footprints, water features, administrative boundaries, and localized language place labels. The JSON structure of a basemap style can be returned as the [Mapbox Style Specification](https://docs.mapbox.com/mapbox-gl-js/style-spec/) or the Esri [Web Map Specification](https://developers.arcgis.com/web-map-specification/).
 *
 * The version of the OpenAPI document: 2.4.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// StylesItemSelf : Describes the provided style.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StylesItemSelf {
    /// Name of the style.
    #[serde(rename = "name")]
    pub name: String,
    /// Endpoint path used to access the style.
    #[serde(rename = "path")]
    pub path: String,
    /// Style provider, arcgis or osm.
    #[serde(rename = "provider")]
    pub provider: String,
    /// link to thumnail of style.
    #[serde(rename = "thumbnailUrl")]
    pub thumbnail_url: String,
    /// URL that points to self.
    #[serde(rename = "selfUrl")]
    pub self_url: String,
    /// URL that refers to a style, potentially including parameters such as language, worldview, or places at the end if they are supported.
    #[serde(rename = "styleUrl")]
    pub style_url: String,
    /// URL that refers to a style's base portal id layer, potentially including parameters such as language, worldview, or places at the end if they are supported.
    #[serde(rename = "rootUrl", skip_serializing_if = "Option::is_none")]
    pub root_url: Option<String>,
    /// URL that points to the base layer self.
    #[serde(rename = "baseUrl", skip_serializing_if = "Option::is_none")]
    pub base_url: Option<String>,
    /// URL that points to the detail layer self.
    #[serde(rename = "detailUrl", skip_serializing_if = "Option::is_none")]
    pub detail_url: Option<String>,
    /// URL that points to the labels layer self.
    #[serde(rename = "labelsUrl", skip_serializing_if = "Option::is_none")]
    pub labels_url: Option<String>,
}

impl StylesItemSelf {
    /// Describes the provided style.
    pub fn new(name: String, path: String, provider: String, thumbnail_url: String, self_url: String, style_url: String) -> StylesItemSelf {
        StylesItemSelf {
            name,
            path,
            provider,
            thumbnail_url,
            self_url,
            style_url,
            root_url: None,
            base_url: None,
            detail_url: None,
            labels_url: None,
        }
    }
}

